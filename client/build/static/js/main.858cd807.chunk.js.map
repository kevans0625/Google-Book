{"version":3,"sources":["components/Header.js","pages/Saved.js","components/SearchBar.js","pages/Search.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","className","width","height","viewBox","xmlns","d","href","Saved","SearchBar","Search","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"wPAkCeA,MAhCf,WAEI,OACE,6BACA,yBAAKC,UAAU,+DACf,yBAAKA,UAAU,mDACb,yBAAKA,UAAU,4BAA4BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,MAAM,8BAA6B,0BAAMC,EAAE,yVACjI,0BAAML,UAAU,wCAAhB,iBAEF,yBAAKA,UAAU,oEACb,yBAAKA,UAAU,wBACb,uBAAGM,KAAK,UAAUN,UAAU,0EAA5B,UAGA,uBAAGM,KAAK,SAASN,UAAU,0EAA3B,YAMN,6BACJ,yBAAKA,UAAU,IACb,wBAAIA,UAAU,yCAAd,+BACA,6BACA,uECnBaO,MALf,WACC,OACI,uCCMUC,MARf,WACC,OACG,2BAAOR,UAAU,mNCSNS,MAVf,WAEI,OACI,6BACI,kBAAC,EAAD,MACN,oDCaSC,MAbf,WACE,OACI,kBAAC,IAAD,KACF,yBAAKV,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,IAAIC,UAAWJ,IACjC,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,SAASC,UAAWN,OCJtCO,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,MChEjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBlB,UAAW,CAGzE,GADkB,IAAImB,IAAIC,GAAwB1B,OAAOC,UAC3C0B,SAAW3B,OAAOC,SAAS0B,OAIvC,OAGF3B,OAAO4B,iBAAiB,QAAQ,WAC9B,IAAMvB,EAAK,UAAMqB,GAAN,sBAEN5B,EAwCX,SAAiCO,GAE/BwB,MAAMxB,GACHI,MAAK,SAAAqB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C5B,UAAUC,cAAc4B,MAAM1B,MAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,MAAK,WAC7BT,OAAOC,SAASoC,eAKpBjC,EAAgBC,MAGnBc,OAAM,WACLF,QAAQC,IACN,oEAzDAoB,CAAwBjC,GAHxBD,EAAgBC,OC7BxBkC,K","file":"static/js/main.858cd807.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(){\n\n    return(\n      <div>\n      <nav className=\"flex items-center justify-between flex-wrap bg-teal-500 p-6\">\n      <div className=\"flex items-center flex-shrink-0 text-white mr-6\">\n        <svg className=\"fill-current h-8 w-8 mr-2\" width=\"54\" height=\"54\" viewBox=\"0 0 54 54\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M13.5 22.1c1.8-7.2 6.3-10.8 13.5-10.8 10.8 0 12.15 8.1 17.55 9.45 3.6.9 6.75-.45 9.45-4.05-1.8 7.2-6.3 10.8-13.5 10.8-10.8 0-12.15-8.1-17.55-9.45-3.6-.9-6.75.45-9.45 4.05zM0 38.3c1.8-7.2 6.3-10.8 13.5-10.8 10.8 0 12.15 8.1 17.55 9.45 3.6.9 6.75-.45 9.45-4.05-1.8 7.2-6.3 10.8-13.5 10.8-10.8 0-12.15-8.1-17.55-9.45-3.6-.9-6.75.45-9.45 4.05z\"/></svg>\n        <span className=\"font-semibold text-xl tracking-tight\">Google Books</span>\n      </div> \n      <div className=\"w-full rounded block flex-grow lg:flex lg:items-center lg:w-auto\">\n        <div className=\"text-sm lg:flex-grow\">\n          <a href=\"/search\" className=\"block mt-4 lg:inline-block lg:mt-0 text-teal-200 hover:text-white mr-4\">\n          Search\n          </a>\n          <a href=\"/saved\" className=\"block mt-4 lg:inline-block lg:mt-0 text-teal-200 hover:text-white mr-4\">\n          Saved\n          </a>\n        </div>\n      </div>\n    </nav>\n    <br/>\n<div className=\"\">\n  <h1 className=\"font-semibold text-4xl tracking-tight\">(React) Google Books Search</h1>\n  <br/>\n  <h5>Seach For and Save Books of Interest</h5>\n</div>\n  </div>  \n\n\n      );\n\n}\nexport default Header;","import React from \"react\"\n\nfunction Saved(){\n return (\n     <h1> Saved</h1>\n )\n}\nexport default Saved;","import React from \"react\"\n\nfunction SearchBar(){\n return (\n    <input className=\"transition-colors duration-100 ease-in-out bg-white\n     shadow-md focus:outline-0 border border-transparent placeholder-gray-600 \n     rounded-lg py-2 pr-4 pl-10 block w-full appearance-none leading-normal ds-input\" \n    />\n )\n}\nexport default SearchBar;","import React from \"react\";\nimport SearchBar from \"../components/SearchBar\";\n\nfunction Search(){\n\n    return(  \n        <div>\n            <SearchBar/>\n      <h1>Search some things</h1>\n      </div>\n      );\n\n}\nexport default Search;","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Saved from \"./pages/Saved\";\nimport Search from \"./pages/Search\";\n\n\nfunction App() {\n  return (\n      <Router>\n    <div className=\"App\">\n      <Header/>\n      <Route exact path=\"/\" component={Search}/>\n      <Route exact path=\"/about\" component={Saved}/>\n    </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}